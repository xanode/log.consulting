name: Build and Deploy

on:
  push:
    branches:
      - main #On déclenche le workflow quand on push sur main

jobs:
  build: #première étape
    runs-on: ubuntu-latest #executer la tâche sur la dernière version d'ubuntu 
    container: 
      image: node:latest #utiliser l'image docker pour exécuter la tâche
    steps:
      - name: Checkout code #etape 1
        uses: actions/checkout@v2 #récupérer les fichiers de GitHUb, 

      - name: Install dependencies #etape 2
        uses: actions/setup-node@v2 #configurer l'environnement Node.js pour notre workflow, 
        with:
          node-version: '14.x'
        run: yarn #installer les dépendances du projets 

      - name: Build project
        run: yarn astro build --experimental-integrations #execution de la commande pour construire le projet astro

      - name: Archive artifacts #etape 4
        uses: actions/upload-artifact@v2 #enrengistrer les fichiers build en tant qu'artifacts
        with:
          name: build #le nommer build
          path: dist #le stocker dans ce chemin

  deploy: #deuxième étape
    needs: build
    runs-on: ubuntu-latest
    container: 
      image: docker:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
        run: npm install -g serverless serverless-scaleway-functions  # Installer les dépendances Serverless et Serverless Scaleway Functions.

      - name: Deploy project #etape 3
        env:
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          SCW_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
        run: |
          docker run --rm -v $(pwd):/app -v /var/run/docker.sock:/var/run/docker.sock -e SCW_SECRET_KEY -e SCW_PROJECT_ID docker:latest sh -c 'cd /app && serverless deploy'
